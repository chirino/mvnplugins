<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2013-2014 smartics, Kronseder & Reiner GmbH

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<document>
    <head profile="http://dublincore.org/documents/dcq-html/">
      <title>Usage Modules</title>

      <link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"/>
      <link rel="DC.rights copyright" href="license.html" />

      <meta name="keywords" content="module descriptor, JBoss modules, archive, maven plugin, maven"/>
      <meta name="description" content="Shows the outline of a module descriptor."/>
      <meta name="author" content="smartics"/>

      <meta name="DC.title" content="Module Outline"/>
      <meta name="DC.creator" content="smartics"/>
      <meta name="DC.subject" content="Tutorial on module descriptors for the JBoss modules Maven plugin"/>
      <meta name="DC.description" content="Shows the outline of a module descriptor."/>
      <meta name="DC.publisher" content="smartics"/>
      <meta name="DC.rights" content="Copyright 2013 smartics"/>
    </head>
	<body>
    <section name="Usage Modules">
      <subsection name="Basic Configuration">
        <p>
          The basic usage of the plugin is this:
        </p>
        <source><![CDATA[<plugin>
  <groupId>${project.groupId}</groupId>
  <artifactId>${project.artifactId}</artifactId>
  <version>${project.version}</version>
  <executions>
    <execution>
      <id>create-modules-archive</id>
      <goals>
        <goal>create-modules-archive</goal>
      </goals>
      <phase>package</phase>
    </execution>
  </executions>
  <configuration>
    ...
  </configuration>
</plugin>]]></source>
    </subsection>
    <subsection name="Use a Profile">
      <p>
        You may want to push the plugin configuration inside a profile. This
        way you can control when to create the modules folder more easily.
      </p>
      <source><![CDATA[<profiles>
  <profile>
    <id>attach</id>

    <properties>
    </properties>

    <build>
      <plugins>
        <plugin>
          <groupId>${project.groupId}</groupId>
          <artifactId>${project.artifactId}</artifactId>
          <version>${project.version}</version>
          <executions>
            <execution>
              <id>create-modules-archive</id>
              <goals>
                <goal>create-modules-archive</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
          <configuration>
          </configuration>
        </plugin>
      </plugins>
    </build>
  </profile>
</profiles>]]></source>
      </subsection>

      <subsection name="An Example Configuration">
        <p>
          Here is an short example to get you started:
        </p>
      <source><![CDATA[<profiles>
  <profile>
    <id>attach</id>

    <properties>
      <attach.archive>true</attach.archive>
    </properties>

    <build>
      <plugins>
        <plugin>
          <groupId>${project.groupId}</groupId>
          <artifactId>${project.artifactId}</artifactId>
          <version>${project.version}</version>
          <executions>
            <execution>
              <id>create-modules-archive</id>
              <goals>
                <goal>create-modules-archive</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
          <configuration>
            <slotStrategy>main</slotStrategy>
            <defaultSlot>my-product</defaultSlot>
            <attach>${attach.archive}</attach>

            <dependencyExcludes>
              <exclude>
                <groupId>com\.sun</groupId>
                <artifactId>tools</artifactId>
              </exclude>
              <exclude>
                <groupId>system</groupId>
              </exclude>
            </dependencyExcludes>
          </configuration>
        </plugin>
      </plugins>
    </build>
  </profile>
</profiles>]]></source>
        <p>
          Module descriptors are stored in XML files that adher to the
          <a href="jboss-modules-descriptor-doc.html">smartics JBoss Modules XSD</a>.
          Per default they are stored at
        </p>
        <source>src/etc/jboss-modules
src/main/config/jboss-modules
src/main/resources/META-INF/jboss-modules</source>
        <p>
          The locations to search modules XML documents is configurable via
          the <a href="create-modules-archive-mojo.html#modules">modules</a>
          property. Please refer to this property for more information on this
          topic.
        </p>
        <p>
          A modules XML looks like this:
        </p>
        <source><![CDATA[<modules xmlns="http://smartics.de/ns/jboss-modules-descriptor/1">
  <module name="org.apache.commons.configuration">
    <match>
      <includes>
        <include>
          <artifactId>commons-configuration</artifactId>
        </include>
      </includes>
    </match>
    <apply-to-dependencies>
      <dependencies>
        <match>
          <includes>
            <include>.+</include>
          </includes>
          <excludes>
            <exclude>org.apache.commons..+</exclude>
          </excludes>
        </match>
        <apply>
          <export>true</export>
        </apply>
      </dependencies>
    </apply-to-dependencies>
  </module>

  <module name="org.apache.commons.$1">
    <match>
      <includes>
        <include>
          <artifactId>commons-(.*)</artifactId>
        </include>
      </includes>
    </match>
  </module>
</modules>]]></source>
        <p>
          The example shows only one module descriptor, but you may add any
          number of <code>module</code> elements to the list.
        </p>
      </subsection>
      <subsection name="Example: Remapping Coordinates">
        <p>
          It is also allowed to add different descriptors for the same module.
          This is e.g. useful to map different artifacts to one module in case
          you have the same artifact in different versions but also different
          Maven coordinates. Here is an example:
        </p>
        <source><![CDATA[<modules xmlns="http://smartics.de/ns/jboss-modules-descriptor/1">
  <module name="org.javassist">
    <match>
      <includes>
        <include>
          <groupId>org.javassist</groupId>
          <artifactId>javassist</artifactId>
        </include>
      </includes>
    </match>

    <apply-to-module>
      <dependencies>
        <module name="javax.api" />
      </dependencies>
    </apply-to-module>
  </module>

  <module name="org.javassist">
    <directives>
      <skip>true</skip>
    </directives>

    <match>
      <includes>
        <include>
          <groupId>javassist</groupId>
          <artifactId>javassist</artifactId>
        </include>
      </includes>
    </match>

    <apply-to-module>
      <dependencies>
        <module name="javax.api" />
      </dependencies>
    </apply-to-module>
  </module>

  <module name="org.javassist">
    <directives>
      <skip>true</skip>
    </directives>

    <match>
      <includes>
        <include>
          <groupId>jboss</groupId>
          <artifactId>javassist</artifactId>
        </include>
      </includes>
    </match>

    <apply-to-module>
      <dependencies>
        <module name="javax.api" />
      </dependencies>
    </apply-to-module>
  </module>
</modules>]]></source>
      </subsection>
      <subsection name="Example: Extensions">
        <p>
          If you are writing an extension you might want to add the extension
          module itself the the <code>main</code> slot, but all its dependencies
          to a specific slot. Here is the configuration to do this (this example
          assumes the project coordinates to be
          <code>de.smartics.jboss.extension:smartics-jboss-counter-extension:1.0</code>):
        </p>
        <source><![CDATA[<plugin>
  <groupId>de.smartics.maven.plugin</groupId>
  <artifactId>smartics-jboss-modules-maven-plugin</artifactId>
  <version>${project.version}</version>
  <executions>
    <execution>
      <id>create-modules-archive</id>
      <goals>
        <goal>create-modules-archive</goal>
      </goals>
      <phase>package</phase>
    </execution>
  </executions>
  <configuration>
    <defaultSlot>other</defaultSlot>
  </configuration>
</plugin>]]></source>
        <p>
          This configuration states that every dependency encountered should
          be directed to the slot named <code>other</code> (unless specified
          otherwise explicitly).
        </p>
        <source><![CDATA[<modules xmlns="http://smartics.de/ns/jboss-modules-descriptor/1">
  <module
    name="$g1.$1"
    slot="main">
    <directives>
      <inherit-slot>false</inherit-slot>
    </directives>

    <match>
      <includes>
        <include>
          <groupId>(de.smartics.jboss.extension)</groupId>
          <artifactId>(smartics-jboss-counter-extension)</artifactId>
        </include>
      </includes>
    </match>
  </module>
</modules>]]></source>
        <p>
          The directive <code>inherit-slot</code> is set to <code>false</code>
          to indicate that the dependencies of this module should go to the
          default slot. Otherwise all dependencies would go to the slot of its
          module.
        </p>
        <p>
          This is the central <code>module.xml</code> that is generated:
        </p>
        <source><![CDATA[<module xmlns="urn:jboss:module:1.1" name="de.smartics.jboss.extension.smartics-jboss-counter-extension">
  <resources>
    <resource-root path="smartics-jboss-counter-extension-1.0.jar" />
  </resources>
  <dependencies>
    <module name="de.smartics.util.smartics-jboss-utils" slot="other" />
    <module name="de.smartics.util.smartics-validation-utils" slot="other" />
  </dependencies>
</module>]]></source>
      </subsection>
    </section>
  </body>
</document>
